user  nginx;
worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Логи
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;
    error_log  /var/log/nginx/error.log warn;

    # Оптимизация
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Gzip
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private; # <-- убрали must-revalidate
    gzip_types
        text/plain
        text/css
        text/xml
        application/javascript
        application/rss+xml
        application/json
        image/svg+xml;

    # Безопасность
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: ws: wss: data: blob: 'unsafe-inline'; frame-ancestors 'self';" always;

    server {
        listen 8080;
        listen [::]:8080;
        server_name _;

        root /usr/share/nginx/html;
        index index.html;

        # SPA
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Кеш статических файлов
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
        }

        # HTML — не кэшируем
        location ~* \.html$ {
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
        }

        location /api/stream/notifications/ {
            proxy_pass http://backend:8000;

            proxy_http_version 1.1;
            proxy_set_header Connection "";       # не форсить hop-by-hop
            proxy_buffering off;                  # важнейшее для SSE
            proxy_cache off;
            gzip off;                             # SSE нельзя сжимать
            chunked_transfer_encoding on;         # ок для длинного ответа
            proxy_read_timeout 3600s;             # длинный таймаут чтения

            add_header X-Accel-Buffering no;
            add_header Cache-Control "no-cache";
            # Content-Type выставляет бэкенд; не переопределяем здесь
        }

        # Проксирование API
        location /api/ {
            proxy_pass http://backend:8000;  # если бэк ожидает /api на входе
            proxy_redirect off;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            client_max_body_size 20m;
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            proxy_request_buffering off;
        }

        # Healthcheck
        location = /health {
            access_log off;
            add_header Content-Type text/plain;
            return 200 "healthy\n";
        }

        # Ошибки
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}
